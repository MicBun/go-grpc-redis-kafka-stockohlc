// Code generated by mockery. DO NOT EDIT.

package stock

import mock "github.com/stretchr/testify/mock"

// MockUnsafeDataStockServer is an autogenerated mock type for the UnsafeDataStockServer type
type MockUnsafeDataStockServer struct {
	mock.Mock
}

type MockUnsafeDataStockServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeDataStockServer) EXPECT() *MockUnsafeDataStockServer_Expecter {
	return &MockUnsafeDataStockServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedDataStockServer provides a mock function with given fields:
func (_m *MockUnsafeDataStockServer) mustEmbedUnimplementedDataStockServer() {
	_m.Called()
}

// MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedDataStockServer'
type MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedDataStockServer is a helper method to define mock.On call
func (_e *MockUnsafeDataStockServer_Expecter) mustEmbedUnimplementedDataStockServer() *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call {
	return &MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call{Call: _e.mock.On("mustEmbedUnimplementedDataStockServer")}
}

func (_c *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call) Run(run func()) *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call) Return() *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call) RunAndReturn(run func()) *MockUnsafeDataStockServer_mustEmbedUnimplementedDataStockServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUnsafeDataStockServer creates a new instance of MockUnsafeDataStockServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUnsafeDataStockServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUnsafeDataStockServer {
	mock := &MockUnsafeDataStockServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
